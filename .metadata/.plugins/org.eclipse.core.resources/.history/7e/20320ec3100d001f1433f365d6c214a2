package com.practice.springboot.myfirstwebapp.todoapp;

import java.time.LocalDate;
import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;

import jakarta.validation.Valid;

@Controller
@SessionAttributes("name")
public class TodoController {
	TodoService todoService;

	public TodoController(TodoService todoService) {
		super();
		this.todoService = todoService;
	}

	@RequestMapping("list-todos")
	public String listAllTodos(ModelMap model) {
		System.out.println("** List all todos **");
		List<Todo> todos = this.todoService.getAllTodos();
		model.put("todos", todos);
		return "listTodos";
	}
	
	@RequestMapping(value = "add-todo", method = RequestMethod.GET)
	public String showNewTodoPage(ModelMap model) {
		System.out.println("** showNewTodoPage() **");
		Todo todo = new Todo(0, (String)model.get("name"), "Default Description", LocalDate.now().plusYears(1), false);
		model.put("todo", todo);
		return "todo";
	}
	
	@RequestMapping(value = "add-todo", method = RequestMethod.POST)
	public String addNewTodo(ModelMap model, @Valid Todo todo, BindingResult result) {
		System.out.println("** addNewTodo() **");
		if (result.hasErrors()) {
			return "todo";
		}
		this.todoService.addTodo((String)model.get("name"), todo.getDescription(), LocalDate.now().plusYears(1), false);
		return "redirect:list-todos";
	}
	
	@RequestMapping(value = "delete-todo")
	public String deleteTodo(@RequestParam("id") int id) {
		System.out.println("** deleteTodo() **");
		
		this.todoService.deleteTodo(id);
		return "redirect:list-todos";
	}
	
	@RequestMapping(value = "update-todo")
	public String showUpdateTodoPage(@RequestParam("id") int id, ModelMap model) {
		System.out.println("** showUpdateTodoPage() **");
		Todo todo = this.todoService.findById(id);
		model.put("todo", todo);
		return "todo";
	}
}
